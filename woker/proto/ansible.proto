syntax = "proto3";

package ansible;

// Ansible 核心参数结构（保持与Rust结构体1:1映射）
message AnsibleRunParams {
    string playbook = 2;
    repeated string cmd = 3;  // 使用repeated而非数组
    
    oneof verbosity {
      int32 verbosity_value = 4;  // 精确匹配Option<i32>
    }
    
    oneof quiet {
      bool quiet_flag = 5;  // 精确匹配Option<bool>
    }
    
    string ident = 6;  // 建议改为required（通过业务逻辑保证）
  }
  
  // Ansible 增强的请求结构
  message DeployRequest {
    string request_id = 1;  // 建议使用UUID v7
    AnsibleRunParams params = 2;
  }
  
  // Ansible 专业化的响应结构
  message DeployResponse {
    string task_ident = 1;  // 更明确的字段名
    int64 start_time = 2;   // 使用int64表示毫秒时间戳
    string initial_status = 3;
  }
  
// 查询任务状态的请求（输入任务标识）
message AnsibleTaskStatusRequest {
  string ident = 1;  // 要查询的任务标识（对应AnsibleRunParams.ident）
}

// 查询任务状态的响应（返回详细执行结果）
message  AnsibleTaskStatusResponse {
  string ident = 1;               // 任务标识
  bool success = 2;               // 整体是否成功
  int32 rc = 3;                   // 返回码（0=成功，非0=失败）
  string status = 4;              // 标准输出
}

message HelloInput {
  string name = 1;
  string message = 2;
}

message HelloOutput {
  string greeting = 1;
  HelloInput original = 2;
}