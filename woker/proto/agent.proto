syntax = "proto3";

package api;

import "google/protobuf/struct.proto"; // 引入结构化参数支持

service AgentService {
  rpc AgentStream(stream AgentMessage) returns (stream AgentMessage);
}

// 双向消息
message AgentMessage {
  oneof body {
    FunctionRequest function_request = 1;
    FunctionResult function_result = 2;
    Heartbeat heartbeat = 3;
    CancelTask cancel_task = 4;
  }
}

// 函数调用请求
message FunctionRequest {
  string request_id = 1;                // 请求ID，用于跟踪请求
  string function_name = 2;             // 要调用的函数名，比如 "train"、"predict"
  google.protobuf.Struct parameters = 3; // 参数，支持嵌套复杂结构
  int64 timeout_seconds = 4;             // 超时时间，单位：秒（可选）
}

// 函数调用结果
message FunctionResult {
  string request_id = 1;                // 对应请求ID
  bool success = 2;                     // 是否成功
  google.protobuf.Struct result = 3;    // 返回的数据（任何格式）
  string error_message = 4;              // 错误信息（如果失败）
}

// 心跳
message Heartbeat {
  string agent_id = 1;
  string agent_type = 2;  // 代理类型，用于区分不同应用
  int64 timestamp = 3;    // 时间戳
}

// 取消任务
message CancelTask {
  string request_id = 1; // 要取消的 request_id
}