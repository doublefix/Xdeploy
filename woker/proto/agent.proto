syntax = "proto3";

package api;

import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";

service AgentService {
  rpc AgentStream(stream AgentMessage) returns (stream AgentMessage);
}

// 双向消息
message AgentMessage {
  oneof body {
    FunctionRequest function_request = 1;
    FunctionResult function_result = 2;
    Heartbeat heartbeat = 3;
    CancelTask cancel_task = 4;
    TunnelMessage tunnel_message = 5;      // 隧道消息
    TunnelResponse tunnel_response = 6;    // 隧道响应
  }
}

// 隧道请求
message TunnelMessage {
  string session_id = 1;                  // 会话ID
  google.protobuf.Any payload = 2;        // 任意类型的负载，例如 TunnelPayload 等
  map<string, string> metadata = 3;       // 元数据，例如来源、用户等
}

// 隧道响应
message TunnelResponse {
  string session_id = 1;                  // 对应请求的会话ID
  int32 random_number = 2;                // 随机数响应
  google.protobuf.Any payload = 3;        // 可选负载
  string status = 4;                      // 状态信息
}

// 隧道负载
message TunnelPayload {
  map<string, google.protobuf.Value> fields = 1;
}

// 函数调用请求
message FunctionRequest {
  string request_id = 1;                // 请求ID，用于跟踪请求
  string function_name = 2;             // 要调用的函数名，比如 "train"、"predict"
  google.protobuf.Struct parameters = 3; // 参数，支持嵌套复杂结构
  int64 timeout_seconds = 4;             // 超时时间，单位：秒（可选）
}

// 函数调用结果
message FunctionResult {
  string request_id = 1;                // 对应请求ID
  bool success = 2;                     // 是否成功
  google.protobuf.Struct result = 3;    // 返回的数据（任何格式）
  string error_message = 4;              // 错误信息（如果失败）
}

// 心跳
message Heartbeat {
  string agent_id = 1;
  string agent_type = 2;  // 代理类型，用于区分不同应用
  int64 timestamp = 3;    // 时间戳
}

// 取消任务
message CancelTask {
  string request_id = 1; // 要取消的 request_id
}

// Ansible 核心参数结构（保持与Rust结构体1:1映射）
message AnsibleRunParams {
  string private_data_dir = 1;
  string playbook = 2;
  repeated string cmd = 3;  // 使用repeated而非数组
  
  oneof verbosity {
    int32 verbosity_value = 4;  // 精确匹配Option<i32>
  }
  
  oneof quiet {
    bool quiet_flag = 5;  // 精确匹配Option<bool>
  }
  
  string ident = 6;  // 建议改为required（通过业务逻辑保证）
}

// Ansible 增强的请求结构
message DeployRequest {
  string request_id = 1;  // 建议使用UUID v7
  AnsibleRunParams params = 2;
  int32 timeout_sec = 3;  // 默认值建议在业务逻辑设置
}

// Ansible 专业化的响应结构
message DeployResponse {
  string task_ident = 1;  // 更明确的字段名
  int64 start_time = 2;   // 使用int64表示毫秒时间戳
  string initial_status = 3;
}

// 通用响应包装器
message Response {
  int32 code = 1;  // 使用HTTP状态码语义
  string request_id = 2;
  string message = 3;
  google.protobuf.Any data = 4;
  repeated ErrorDetail errors = 5;
  
  message ErrorDetail {
    string field = 1;
    string code = 2;  // 错误类型编码（如INVALID_FORMAT）
    string message = 3;
  }
}
